
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `Shipment` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums.ts"
import type * as Prisma from "../internal/prismaNamespace.ts"

/**
 * Model Shipment
 * 
 */
export type ShipmentModel = runtime.Types.Result.DefaultSelection<Prisma.$ShipmentPayload>

export type AggregateShipment = {
  _count: ShipmentCountAggregateOutputType | null
  _min: ShipmentMinAggregateOutputType | null
  _max: ShipmentMaxAggregateOutputType | null
}

export type ShipmentMinAggregateOutputType = {
  id: string | null
  addressId: string | null
  shipmentDate: Date | null
  deliveryDate: Date | null
  status: $Enums.ShipmentStatus | null
}

export type ShipmentMaxAggregateOutputType = {
  id: string | null
  addressId: string | null
  shipmentDate: Date | null
  deliveryDate: Date | null
  status: $Enums.ShipmentStatus | null
}

export type ShipmentCountAggregateOutputType = {
  id: number
  addressId: number
  shipmentDate: number
  deliveryDate: number
  status: number
  _all: number
}


export type ShipmentMinAggregateInputType = {
  id?: true
  addressId?: true
  shipmentDate?: true
  deliveryDate?: true
  status?: true
}

export type ShipmentMaxAggregateInputType = {
  id?: true
  addressId?: true
  shipmentDate?: true
  deliveryDate?: true
  status?: true
}

export type ShipmentCountAggregateInputType = {
  id?: true
  addressId?: true
  shipmentDate?: true
  deliveryDate?: true
  status?: true
  _all?: true
}

export type ShipmentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Shipment to aggregate.
   */
  where?: Prisma.ShipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Shipments to fetch.
   */
  orderBy?: Prisma.ShipmentOrderByWithRelationInput | Prisma.ShipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ShipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Shipments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Shipments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Shipments
  **/
  _count?: true | ShipmentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ShipmentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ShipmentMaxAggregateInputType
}

export type GetShipmentAggregateType<T extends ShipmentAggregateArgs> = {
      [P in keyof T & keyof AggregateShipment]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateShipment[P]>
    : Prisma.GetScalarType<T[P], AggregateShipment[P]>
}




export type ShipmentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ShipmentWhereInput
  orderBy?: Prisma.ShipmentOrderByWithAggregationInput | Prisma.ShipmentOrderByWithAggregationInput[]
  by: Prisma.ShipmentScalarFieldEnum[] | Prisma.ShipmentScalarFieldEnum
  having?: Prisma.ShipmentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ShipmentCountAggregateInputType | true
  _min?: ShipmentMinAggregateInputType
  _max?: ShipmentMaxAggregateInputType
}

export type ShipmentGroupByOutputType = {
  id: string
  addressId: string | null
  shipmentDate: Date
  deliveryDate: Date | null
  status: $Enums.ShipmentStatus
  _count: ShipmentCountAggregateOutputType | null
  _min: ShipmentMinAggregateOutputType | null
  _max: ShipmentMaxAggregateOutputType | null
}

type GetShipmentGroupByPayload<T extends ShipmentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ShipmentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ShipmentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ShipmentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ShipmentGroupByOutputType[P]>
      }
    >
  >



export type ShipmentWhereInput = {
  AND?: Prisma.ShipmentWhereInput | Prisma.ShipmentWhereInput[]
  OR?: Prisma.ShipmentWhereInput[]
  NOT?: Prisma.ShipmentWhereInput | Prisma.ShipmentWhereInput[]
  id?: Prisma.UuidFilter<"Shipment"> | string
  addressId?: Prisma.UuidNullableFilter<"Shipment"> | string | null
  shipmentDate?: Prisma.DateTimeFilter<"Shipment"> | Date | string
  deliveryDate?: Prisma.DateTimeNullableFilter<"Shipment"> | Date | string | null
  status?: Prisma.EnumShipmentStatusFilter<"Shipment"> | $Enums.ShipmentStatus
  address?: Prisma.XOR<Prisma.ShippingAddressNullableScalarRelationFilter, Prisma.ShippingAddressWhereInput> | null
  orders?: Prisma.OrderListRelationFilter
}

export type ShipmentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  addressId?: Prisma.SortOrderInput | Prisma.SortOrder
  shipmentDate?: Prisma.SortOrder
  deliveryDate?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  address?: Prisma.ShippingAddressOrderByWithRelationInput
  orders?: Prisma.OrderOrderByRelationAggregateInput
}

export type ShipmentWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ShipmentWhereInput | Prisma.ShipmentWhereInput[]
  OR?: Prisma.ShipmentWhereInput[]
  NOT?: Prisma.ShipmentWhereInput | Prisma.ShipmentWhereInput[]
  addressId?: Prisma.UuidNullableFilter<"Shipment"> | string | null
  shipmentDate?: Prisma.DateTimeFilter<"Shipment"> | Date | string
  deliveryDate?: Prisma.DateTimeNullableFilter<"Shipment"> | Date | string | null
  status?: Prisma.EnumShipmentStatusFilter<"Shipment"> | $Enums.ShipmentStatus
  address?: Prisma.XOR<Prisma.ShippingAddressNullableScalarRelationFilter, Prisma.ShippingAddressWhereInput> | null
  orders?: Prisma.OrderListRelationFilter
}, "id">

export type ShipmentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  addressId?: Prisma.SortOrderInput | Prisma.SortOrder
  shipmentDate?: Prisma.SortOrder
  deliveryDate?: Prisma.SortOrderInput | Prisma.SortOrder
  status?: Prisma.SortOrder
  _count?: Prisma.ShipmentCountOrderByAggregateInput
  _max?: Prisma.ShipmentMaxOrderByAggregateInput
  _min?: Prisma.ShipmentMinOrderByAggregateInput
}

export type ShipmentScalarWhereWithAggregatesInput = {
  AND?: Prisma.ShipmentScalarWhereWithAggregatesInput | Prisma.ShipmentScalarWhereWithAggregatesInput[]
  OR?: Prisma.ShipmentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ShipmentScalarWhereWithAggregatesInput | Prisma.ShipmentScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"Shipment"> | string
  addressId?: Prisma.UuidNullableWithAggregatesFilter<"Shipment"> | string | null
  shipmentDate?: Prisma.DateTimeWithAggregatesFilter<"Shipment"> | Date | string
  deliveryDate?: Prisma.DateTimeNullableWithAggregatesFilter<"Shipment"> | Date | string | null
  status?: Prisma.EnumShipmentStatusWithAggregatesFilter<"Shipment"> | $Enums.ShipmentStatus
}

export type ShipmentCreateInput = {
  id?: string
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
  address?: Prisma.ShippingAddressCreateNestedOneWithoutShipmentsInput
  orders?: Prisma.OrderCreateNestedManyWithoutShipmentInput
}

export type ShipmentUncheckedCreateInput = {
  id?: string
  addressId?: string | null
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutShipmentInput
}

export type ShipmentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
  address?: Prisma.ShippingAddressUpdateOneWithoutShipmentsNestedInput
  orders?: Prisma.OrderUpdateManyWithoutShipmentNestedInput
}

export type ShipmentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
  orders?: Prisma.OrderUncheckedUpdateManyWithoutShipmentNestedInput
}

export type ShipmentCreateManyInput = {
  id?: string
  addressId?: string | null
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
}

export type ShipmentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
}

export type ShipmentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
}

export type ShipmentListRelationFilter = {
  every?: Prisma.ShipmentWhereInput
  some?: Prisma.ShipmentWhereInput
  none?: Prisma.ShipmentWhereInput
}

export type ShipmentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ShipmentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  addressId?: Prisma.SortOrder
  shipmentDate?: Prisma.SortOrder
  deliveryDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ShipmentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  addressId?: Prisma.SortOrder
  shipmentDate?: Prisma.SortOrder
  deliveryDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ShipmentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  addressId?: Prisma.SortOrder
  shipmentDate?: Prisma.SortOrder
  deliveryDate?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type ShipmentNullableScalarRelationFilter = {
  is?: Prisma.ShipmentWhereInput | null
  isNot?: Prisma.ShipmentWhereInput | null
}

export type ShipmentCreateNestedManyWithoutAddressInput = {
  create?: Prisma.XOR<Prisma.ShipmentCreateWithoutAddressInput, Prisma.ShipmentUncheckedCreateWithoutAddressInput> | Prisma.ShipmentCreateWithoutAddressInput[] | Prisma.ShipmentUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ShipmentCreateOrConnectWithoutAddressInput | Prisma.ShipmentCreateOrConnectWithoutAddressInput[]
  createMany?: Prisma.ShipmentCreateManyAddressInputEnvelope
  connect?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
}

export type ShipmentUncheckedCreateNestedManyWithoutAddressInput = {
  create?: Prisma.XOR<Prisma.ShipmentCreateWithoutAddressInput, Prisma.ShipmentUncheckedCreateWithoutAddressInput> | Prisma.ShipmentCreateWithoutAddressInput[] | Prisma.ShipmentUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ShipmentCreateOrConnectWithoutAddressInput | Prisma.ShipmentCreateOrConnectWithoutAddressInput[]
  createMany?: Prisma.ShipmentCreateManyAddressInputEnvelope
  connect?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
}

export type ShipmentUpdateManyWithoutAddressNestedInput = {
  create?: Prisma.XOR<Prisma.ShipmentCreateWithoutAddressInput, Prisma.ShipmentUncheckedCreateWithoutAddressInput> | Prisma.ShipmentCreateWithoutAddressInput[] | Prisma.ShipmentUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ShipmentCreateOrConnectWithoutAddressInput | Prisma.ShipmentCreateOrConnectWithoutAddressInput[]
  upsert?: Prisma.ShipmentUpsertWithWhereUniqueWithoutAddressInput | Prisma.ShipmentUpsertWithWhereUniqueWithoutAddressInput[]
  createMany?: Prisma.ShipmentCreateManyAddressInputEnvelope
  set?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  disconnect?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  delete?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  connect?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  update?: Prisma.ShipmentUpdateWithWhereUniqueWithoutAddressInput | Prisma.ShipmentUpdateWithWhereUniqueWithoutAddressInput[]
  updateMany?: Prisma.ShipmentUpdateManyWithWhereWithoutAddressInput | Prisma.ShipmentUpdateManyWithWhereWithoutAddressInput[]
  deleteMany?: Prisma.ShipmentScalarWhereInput | Prisma.ShipmentScalarWhereInput[]
}

export type ShipmentUncheckedUpdateManyWithoutAddressNestedInput = {
  create?: Prisma.XOR<Prisma.ShipmentCreateWithoutAddressInput, Prisma.ShipmentUncheckedCreateWithoutAddressInput> | Prisma.ShipmentCreateWithoutAddressInput[] | Prisma.ShipmentUncheckedCreateWithoutAddressInput[]
  connectOrCreate?: Prisma.ShipmentCreateOrConnectWithoutAddressInput | Prisma.ShipmentCreateOrConnectWithoutAddressInput[]
  upsert?: Prisma.ShipmentUpsertWithWhereUniqueWithoutAddressInput | Prisma.ShipmentUpsertWithWhereUniqueWithoutAddressInput[]
  createMany?: Prisma.ShipmentCreateManyAddressInputEnvelope
  set?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  disconnect?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  delete?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  connect?: Prisma.ShipmentWhereUniqueInput | Prisma.ShipmentWhereUniqueInput[]
  update?: Prisma.ShipmentUpdateWithWhereUniqueWithoutAddressInput | Prisma.ShipmentUpdateWithWhereUniqueWithoutAddressInput[]
  updateMany?: Prisma.ShipmentUpdateManyWithWhereWithoutAddressInput | Prisma.ShipmentUpdateManyWithWhereWithoutAddressInput[]
  deleteMany?: Prisma.ShipmentScalarWhereInput | Prisma.ShipmentScalarWhereInput[]
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}

export type EnumShipmentStatusFieldUpdateOperationsInput = {
  set?: $Enums.ShipmentStatus
}

export type ShipmentCreateNestedOneWithoutOrdersInput = {
  create?: Prisma.XOR<Prisma.ShipmentCreateWithoutOrdersInput, Prisma.ShipmentUncheckedCreateWithoutOrdersInput>
  connectOrCreate?: Prisma.ShipmentCreateOrConnectWithoutOrdersInput
  connect?: Prisma.ShipmentWhereUniqueInput
}

export type ShipmentUpdateOneWithoutOrdersNestedInput = {
  create?: Prisma.XOR<Prisma.ShipmentCreateWithoutOrdersInput, Prisma.ShipmentUncheckedCreateWithoutOrdersInput>
  connectOrCreate?: Prisma.ShipmentCreateOrConnectWithoutOrdersInput
  upsert?: Prisma.ShipmentUpsertWithoutOrdersInput
  disconnect?: Prisma.ShipmentWhereInput | boolean
  delete?: Prisma.ShipmentWhereInput | boolean
  connect?: Prisma.ShipmentWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ShipmentUpdateToOneWithWhereWithoutOrdersInput, Prisma.ShipmentUpdateWithoutOrdersInput>, Prisma.ShipmentUncheckedUpdateWithoutOrdersInput>
}

export type ShipmentCreateWithoutAddressInput = {
  id?: string
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
  orders?: Prisma.OrderCreateNestedManyWithoutShipmentInput
}

export type ShipmentUncheckedCreateWithoutAddressInput = {
  id?: string
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutShipmentInput
}

export type ShipmentCreateOrConnectWithoutAddressInput = {
  where: Prisma.ShipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.ShipmentCreateWithoutAddressInput, Prisma.ShipmentUncheckedCreateWithoutAddressInput>
}

export type ShipmentCreateManyAddressInputEnvelope = {
  data: Prisma.ShipmentCreateManyAddressInput | Prisma.ShipmentCreateManyAddressInput[]
  skipDuplicates?: boolean
}

export type ShipmentUpsertWithWhereUniqueWithoutAddressInput = {
  where: Prisma.ShipmentWhereUniqueInput
  update: Prisma.XOR<Prisma.ShipmentUpdateWithoutAddressInput, Prisma.ShipmentUncheckedUpdateWithoutAddressInput>
  create: Prisma.XOR<Prisma.ShipmentCreateWithoutAddressInput, Prisma.ShipmentUncheckedCreateWithoutAddressInput>
}

export type ShipmentUpdateWithWhereUniqueWithoutAddressInput = {
  where: Prisma.ShipmentWhereUniqueInput
  data: Prisma.XOR<Prisma.ShipmentUpdateWithoutAddressInput, Prisma.ShipmentUncheckedUpdateWithoutAddressInput>
}

export type ShipmentUpdateManyWithWhereWithoutAddressInput = {
  where: Prisma.ShipmentScalarWhereInput
  data: Prisma.XOR<Prisma.ShipmentUpdateManyMutationInput, Prisma.ShipmentUncheckedUpdateManyWithoutAddressInput>
}

export type ShipmentScalarWhereInput = {
  AND?: Prisma.ShipmentScalarWhereInput | Prisma.ShipmentScalarWhereInput[]
  OR?: Prisma.ShipmentScalarWhereInput[]
  NOT?: Prisma.ShipmentScalarWhereInput | Prisma.ShipmentScalarWhereInput[]
  id?: Prisma.UuidFilter<"Shipment"> | string
  addressId?: Prisma.UuidNullableFilter<"Shipment"> | string | null
  shipmentDate?: Prisma.DateTimeFilter<"Shipment"> | Date | string
  deliveryDate?: Prisma.DateTimeNullableFilter<"Shipment"> | Date | string | null
  status?: Prisma.EnumShipmentStatusFilter<"Shipment"> | $Enums.ShipmentStatus
}

export type ShipmentCreateWithoutOrdersInput = {
  id?: string
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
  address?: Prisma.ShippingAddressCreateNestedOneWithoutShipmentsInput
}

export type ShipmentUncheckedCreateWithoutOrdersInput = {
  id?: string
  addressId?: string | null
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
}

export type ShipmentCreateOrConnectWithoutOrdersInput = {
  where: Prisma.ShipmentWhereUniqueInput
  create: Prisma.XOR<Prisma.ShipmentCreateWithoutOrdersInput, Prisma.ShipmentUncheckedCreateWithoutOrdersInput>
}

export type ShipmentUpsertWithoutOrdersInput = {
  update: Prisma.XOR<Prisma.ShipmentUpdateWithoutOrdersInput, Prisma.ShipmentUncheckedUpdateWithoutOrdersInput>
  create: Prisma.XOR<Prisma.ShipmentCreateWithoutOrdersInput, Prisma.ShipmentUncheckedCreateWithoutOrdersInput>
  where?: Prisma.ShipmentWhereInput
}

export type ShipmentUpdateToOneWithWhereWithoutOrdersInput = {
  where?: Prisma.ShipmentWhereInput
  data: Prisma.XOR<Prisma.ShipmentUpdateWithoutOrdersInput, Prisma.ShipmentUncheckedUpdateWithoutOrdersInput>
}

export type ShipmentUpdateWithoutOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
  address?: Prisma.ShippingAddressUpdateOneWithoutShipmentsNestedInput
}

export type ShipmentUncheckedUpdateWithoutOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  addressId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
}

export type ShipmentCreateManyAddressInput = {
  id?: string
  shipmentDate?: Date | string
  deliveryDate?: Date | string | null
  status?: $Enums.ShipmentStatus
}

export type ShipmentUpdateWithoutAddressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
  orders?: Prisma.OrderUpdateManyWithoutShipmentNestedInput
}

export type ShipmentUncheckedUpdateWithoutAddressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
  orders?: Prisma.OrderUncheckedUpdateManyWithoutShipmentNestedInput
}

export type ShipmentUncheckedUpdateManyWithoutAddressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  shipmentDate?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  deliveryDate?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  status?: Prisma.EnumShipmentStatusFieldUpdateOperationsInput | $Enums.ShipmentStatus
}


/**
 * Count Type ShipmentCountOutputType
 */

export type ShipmentCountOutputType = {
  orders: number
}

export type ShipmentCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  orders?: boolean | ShipmentCountOutputTypeCountOrdersArgs
}

/**
 * ShipmentCountOutputType without action
 */
export type ShipmentCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShipmentCountOutputType
   */
  select?: Prisma.ShipmentCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ShipmentCountOutputType without action
 */
export type ShipmentCountOutputTypeCountOrdersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrderWhereInput
}


export type ShipmentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  addressId?: boolean
  shipmentDate?: boolean
  deliveryDate?: boolean
  status?: boolean
  address?: boolean | Prisma.Shipment$addressArgs<ExtArgs>
  orders?: boolean | Prisma.Shipment$ordersArgs<ExtArgs>
  _count?: boolean | Prisma.ShipmentCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["shipment"]>

export type ShipmentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  addressId?: boolean
  shipmentDate?: boolean
  deliveryDate?: boolean
  status?: boolean
  address?: boolean | Prisma.Shipment$addressArgs<ExtArgs>
}, ExtArgs["result"]["shipment"]>

export type ShipmentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  addressId?: boolean
  shipmentDate?: boolean
  deliveryDate?: boolean
  status?: boolean
  address?: boolean | Prisma.Shipment$addressArgs<ExtArgs>
}, ExtArgs["result"]["shipment"]>

export type ShipmentSelectScalar = {
  id?: boolean
  addressId?: boolean
  shipmentDate?: boolean
  deliveryDate?: boolean
  status?: boolean
}

export type ShipmentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "addressId" | "shipmentDate" | "deliveryDate" | "status", ExtArgs["result"]["shipment"]>
export type ShipmentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  address?: boolean | Prisma.Shipment$addressArgs<ExtArgs>
  orders?: boolean | Prisma.Shipment$ordersArgs<ExtArgs>
  _count?: boolean | Prisma.ShipmentCountOutputTypeDefaultArgs<ExtArgs>
}
export type ShipmentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  address?: boolean | Prisma.Shipment$addressArgs<ExtArgs>
}
export type ShipmentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  address?: boolean | Prisma.Shipment$addressArgs<ExtArgs>
}

export type $ShipmentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Shipment"
  objects: {
    address: Prisma.$ShippingAddressPayload<ExtArgs> | null
    orders: Prisma.$OrderPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    addressId: string | null
    shipmentDate: Date
    deliveryDate: Date | null
    status: $Enums.ShipmentStatus
  }, ExtArgs["result"]["shipment"]>
  composites: {}
}

export type ShipmentGetPayload<S extends boolean | null | undefined | ShipmentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ShipmentPayload, S>

export type ShipmentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ShipmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ShipmentCountAggregateInputType | true
  }

export interface ShipmentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Shipment'], meta: { name: 'Shipment' } }
  /**
   * Find zero or one Shipment that matches the filter.
   * @param {ShipmentFindUniqueArgs} args - Arguments to find a Shipment
   * @example
   * // Get one Shipment
   * const shipment = await prisma.shipment.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ShipmentFindUniqueArgs>(args: Prisma.SelectSubset<T, ShipmentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Shipment that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ShipmentFindUniqueOrThrowArgs} args - Arguments to find a Shipment
   * @example
   * // Get one Shipment
   * const shipment = await prisma.shipment.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ShipmentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ShipmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Shipment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShipmentFindFirstArgs} args - Arguments to find a Shipment
   * @example
   * // Get one Shipment
   * const shipment = await prisma.shipment.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ShipmentFindFirstArgs>(args?: Prisma.SelectSubset<T, ShipmentFindFirstArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Shipment that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShipmentFindFirstOrThrowArgs} args - Arguments to find a Shipment
   * @example
   * // Get one Shipment
   * const shipment = await prisma.shipment.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ShipmentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ShipmentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Shipments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShipmentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Shipments
   * const shipments = await prisma.shipment.findMany()
   * 
   * // Get first 10 Shipments
   * const shipments = await prisma.shipment.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const shipmentWithIdOnly = await prisma.shipment.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ShipmentFindManyArgs>(args?: Prisma.SelectSubset<T, ShipmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Shipment.
   * @param {ShipmentCreateArgs} args - Arguments to create a Shipment.
   * @example
   * // Create one Shipment
   * const Shipment = await prisma.shipment.create({
   *   data: {
   *     // ... data to create a Shipment
   *   }
   * })
   * 
   */
  create<T extends ShipmentCreateArgs>(args: Prisma.SelectSubset<T, ShipmentCreateArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Shipments.
   * @param {ShipmentCreateManyArgs} args - Arguments to create many Shipments.
   * @example
   * // Create many Shipments
   * const shipment = await prisma.shipment.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ShipmentCreateManyArgs>(args?: Prisma.SelectSubset<T, ShipmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Shipments and returns the data saved in the database.
   * @param {ShipmentCreateManyAndReturnArgs} args - Arguments to create many Shipments.
   * @example
   * // Create many Shipments
   * const shipment = await prisma.shipment.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Shipments and only return the `id`
   * const shipmentWithIdOnly = await prisma.shipment.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ShipmentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ShipmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Shipment.
   * @param {ShipmentDeleteArgs} args - Arguments to delete one Shipment.
   * @example
   * // Delete one Shipment
   * const Shipment = await prisma.shipment.delete({
   *   where: {
   *     // ... filter to delete one Shipment
   *   }
   * })
   * 
   */
  delete<T extends ShipmentDeleteArgs>(args: Prisma.SelectSubset<T, ShipmentDeleteArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Shipment.
   * @param {ShipmentUpdateArgs} args - Arguments to update one Shipment.
   * @example
   * // Update one Shipment
   * const shipment = await prisma.shipment.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ShipmentUpdateArgs>(args: Prisma.SelectSubset<T, ShipmentUpdateArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Shipments.
   * @param {ShipmentDeleteManyArgs} args - Arguments to filter Shipments to delete.
   * @example
   * // Delete a few Shipments
   * const { count } = await prisma.shipment.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ShipmentDeleteManyArgs>(args?: Prisma.SelectSubset<T, ShipmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Shipments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShipmentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Shipments
   * const shipment = await prisma.shipment.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ShipmentUpdateManyArgs>(args: Prisma.SelectSubset<T, ShipmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Shipments and returns the data updated in the database.
   * @param {ShipmentUpdateManyAndReturnArgs} args - Arguments to update many Shipments.
   * @example
   * // Update many Shipments
   * const shipment = await prisma.shipment.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Shipments and only return the `id`
   * const shipmentWithIdOnly = await prisma.shipment.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ShipmentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ShipmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Shipment.
   * @param {ShipmentUpsertArgs} args - Arguments to update or create a Shipment.
   * @example
   * // Update or create a Shipment
   * const shipment = await prisma.shipment.upsert({
   *   create: {
   *     // ... data to create a Shipment
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Shipment we want to update
   *   }
   * })
   */
  upsert<T extends ShipmentUpsertArgs>(args: Prisma.SelectSubset<T, ShipmentUpsertArgs<ExtArgs>>): Prisma.Prisma__ShipmentClient<runtime.Types.Result.GetResult<Prisma.$ShipmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Shipments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShipmentCountArgs} args - Arguments to filter Shipments to count.
   * @example
   * // Count the number of Shipments
   * const count = await prisma.shipment.count({
   *   where: {
   *     // ... the filter for the Shipments we want to count
   *   }
   * })
  **/
  count<T extends ShipmentCountArgs>(
    args?: Prisma.Subset<T, ShipmentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ShipmentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Shipment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShipmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ShipmentAggregateArgs>(args: Prisma.Subset<T, ShipmentAggregateArgs>): Prisma.PrismaPromise<GetShipmentAggregateType<T>>

  /**
   * Group by Shipment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShipmentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ShipmentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ShipmentGroupByArgs['orderBy'] }
      : { orderBy?: ShipmentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ShipmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShipmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Shipment model
 */
readonly fields: ShipmentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Shipment.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ShipmentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  address<T extends Prisma.Shipment$addressArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Shipment$addressArgs<ExtArgs>>): Prisma.Prisma__ShippingAddressClient<runtime.Types.Result.GetResult<Prisma.$ShippingAddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  orders<T extends Prisma.Shipment$ordersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Shipment$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Shipment model
 */
export interface ShipmentFieldRefs {
  readonly id: Prisma.FieldRef<"Shipment", 'String'>
  readonly addressId: Prisma.FieldRef<"Shipment", 'String'>
  readonly shipmentDate: Prisma.FieldRef<"Shipment", 'DateTime'>
  readonly deliveryDate: Prisma.FieldRef<"Shipment", 'DateTime'>
  readonly status: Prisma.FieldRef<"Shipment", 'ShipmentStatus'>
}
    

// Custom InputTypes
/**
 * Shipment findUnique
 */
export type ShipmentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * Filter, which Shipment to fetch.
   */
  where: Prisma.ShipmentWhereUniqueInput
}

/**
 * Shipment findUniqueOrThrow
 */
export type ShipmentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * Filter, which Shipment to fetch.
   */
  where: Prisma.ShipmentWhereUniqueInput
}

/**
 * Shipment findFirst
 */
export type ShipmentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * Filter, which Shipment to fetch.
   */
  where?: Prisma.ShipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Shipments to fetch.
   */
  orderBy?: Prisma.ShipmentOrderByWithRelationInput | Prisma.ShipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Shipments.
   */
  cursor?: Prisma.ShipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Shipments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Shipments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Shipments.
   */
  distinct?: Prisma.ShipmentScalarFieldEnum | Prisma.ShipmentScalarFieldEnum[]
}

/**
 * Shipment findFirstOrThrow
 */
export type ShipmentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * Filter, which Shipment to fetch.
   */
  where?: Prisma.ShipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Shipments to fetch.
   */
  orderBy?: Prisma.ShipmentOrderByWithRelationInput | Prisma.ShipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Shipments.
   */
  cursor?: Prisma.ShipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Shipments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Shipments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Shipments.
   */
  distinct?: Prisma.ShipmentScalarFieldEnum | Prisma.ShipmentScalarFieldEnum[]
}

/**
 * Shipment findMany
 */
export type ShipmentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * Filter, which Shipments to fetch.
   */
  where?: Prisma.ShipmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Shipments to fetch.
   */
  orderBy?: Prisma.ShipmentOrderByWithRelationInput | Prisma.ShipmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Shipments.
   */
  cursor?: Prisma.ShipmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Shipments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Shipments.
   */
  skip?: number
  distinct?: Prisma.ShipmentScalarFieldEnum | Prisma.ShipmentScalarFieldEnum[]
}

/**
 * Shipment create
 */
export type ShipmentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * The data needed to create a Shipment.
   */
  data?: Prisma.XOR<Prisma.ShipmentCreateInput, Prisma.ShipmentUncheckedCreateInput>
}

/**
 * Shipment createMany
 */
export type ShipmentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Shipments.
   */
  data: Prisma.ShipmentCreateManyInput | Prisma.ShipmentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Shipment createManyAndReturn
 */
export type ShipmentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * The data used to create many Shipments.
   */
  data: Prisma.ShipmentCreateManyInput | Prisma.ShipmentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Shipment update
 */
export type ShipmentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * The data needed to update a Shipment.
   */
  data: Prisma.XOR<Prisma.ShipmentUpdateInput, Prisma.ShipmentUncheckedUpdateInput>
  /**
   * Choose, which Shipment to update.
   */
  where: Prisma.ShipmentWhereUniqueInput
}

/**
 * Shipment updateMany
 */
export type ShipmentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Shipments.
   */
  data: Prisma.XOR<Prisma.ShipmentUpdateManyMutationInput, Prisma.ShipmentUncheckedUpdateManyInput>
  /**
   * Filter which Shipments to update
   */
  where?: Prisma.ShipmentWhereInput
  /**
   * Limit how many Shipments to update.
   */
  limit?: number
}

/**
 * Shipment updateManyAndReturn
 */
export type ShipmentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * The data used to update Shipments.
   */
  data: Prisma.XOR<Prisma.ShipmentUpdateManyMutationInput, Prisma.ShipmentUncheckedUpdateManyInput>
  /**
   * Filter which Shipments to update
   */
  where?: Prisma.ShipmentWhereInput
  /**
   * Limit how many Shipments to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Shipment upsert
 */
export type ShipmentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * The filter to search for the Shipment to update in case it exists.
   */
  where: Prisma.ShipmentWhereUniqueInput
  /**
   * In case the Shipment found by the `where` argument doesn't exist, create a new Shipment with this data.
   */
  create: Prisma.XOR<Prisma.ShipmentCreateInput, Prisma.ShipmentUncheckedCreateInput>
  /**
   * In case the Shipment was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ShipmentUpdateInput, Prisma.ShipmentUncheckedUpdateInput>
}

/**
 * Shipment delete
 */
export type ShipmentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
  /**
   * Filter which Shipment to delete.
   */
  where: Prisma.ShipmentWhereUniqueInput
}

/**
 * Shipment deleteMany
 */
export type ShipmentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Shipments to delete
   */
  where?: Prisma.ShipmentWhereInput
  /**
   * Limit how many Shipments to delete.
   */
  limit?: number
}

/**
 * Shipment.address
 */
export type Shipment$addressArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingAddress
   */
  select?: Prisma.ShippingAddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingAddress
   */
  omit?: Prisma.ShippingAddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingAddressInclude<ExtArgs> | null
  where?: Prisma.ShippingAddressWhereInput
}

/**
 * Shipment.orders
 */
export type Shipment$ordersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Order
   */
  select?: Prisma.OrderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Order
   */
  omit?: Prisma.OrderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderInclude<ExtArgs> | null
  where?: Prisma.OrderWhereInput
  orderBy?: Prisma.OrderOrderByWithRelationInput | Prisma.OrderOrderByWithRelationInput[]
  cursor?: Prisma.OrderWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OrderScalarFieldEnum | Prisma.OrderScalarFieldEnum[]
}

/**
 * Shipment without action
 */
export type ShipmentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Shipment
   */
  select?: Prisma.ShipmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Shipment
   */
  omit?: Prisma.ShipmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShipmentInclude<ExtArgs> | null
}
