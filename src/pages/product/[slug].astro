---
export const prerender = true;
import { getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import { Button } from "@/components/ui/button.tsx";
import { Input } from "@/components/ui/input.tsx";
import { Plus, Minus } from "@lucide/astro";
import { SliderProduct } from "@/components/ui/slider-product.tsx";

export async function getStaticPaths() {
    const products = await getCollection("products");

    return products.map((product) => ({
        params: { slug: product.data.slug },
        props: { product: product.data },
    }));
}


const { product } = Astro.props;
const { name, description, price, imagesUrl } = product.data;
---

<Layout>
    <section class="flex px-8 lg:px-40 items-center justify-evenly min-h-screen">
        <article
            class="flex flex-col items-center justify-center lg:flex-row w-full py-40 lg:w-1/2 h-full gap-24"
        >
            <div
                class="flex justify-center items-center gap-8 w-[400px] h-full border-gray-300 shadow-lg rounded-sm border bg-card text-card-foreground"
            >
                <div class="p-6">
                    <SliderProduct productImages={imagesUrl} client:idle></SliderProduct>
                </div>
            </div>

            <div
                class="w-[400px] h-full py-12 px-8 justify-between border-1 border-gray-300 rounded-sm shadow-lg bg-card text-card-foreground"
            >
                <div class="text-3xl font-extrabold flex flex-col space-y-1.5 p-6">{name}</div>
                <div class="flex flex-col gap-8 h-1/2 p-6 pt-0">
                    <div>
                        <h2 class="text-lg font-medium">
                            ${price} MXN C/U
                        </h2>
                    </div>
                    <div class="mt-4">
                        <p>
                            {description}
                        </p>
                    </div>
                </div>
                <div class="flex flex-col gap-4">
                    <div class="flex justify-center items-center p-6 pt-0 ">
                        <Button
                            id="decrement"
                            className="bg-white hover:bg-gray-200 hover:cursor-pointer"
                        >
                            <Minus color="black" />
                        </Button>
                        <Input
                            id="counter"
                            type="number"
                            defaultValue="0"
                            className="w-1/3 text-center [&::-webkit-outer-spin-button]:appearance-none [&::-webkit-inner-spin-button]:appearance-none [-moz-appearance:textfield]"
                        />
                        <Button
                            id="increment"
                            className="bg-white hover:bg-gray-200 hover:cursor-pointer"
                        >
                            <Plus color="black" />
                        </Button>
                    </div>
                    <button
                        class="px-6 py-2 w-full text-black rounded-sm bg-amber-400 hover:bg-amber-600 hover:cursor-pointer shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] hover:shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] transition"
                    >
                        Add to cart
                    </button>
                </div>
        </article>
    </section>
</Layout>

<script is:inline>
    const input = document.querySelector("#counter");
    const btnAdd = document.querySelector("#increment");
    const btnSub = document.querySelector("#decrement");

    btnAdd?.addEventListener("click", () => {
        input.value = parseInt(input.value || "0") + 1;
    });

    btnSub?.addEventListener("click", () => {
        const current = parseInt(input.value || "0");
        input.value = current > 0 ? current - 1 : 0;
    });
</script>
